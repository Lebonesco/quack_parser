/* Lexical Parser */

!whitespace : '\t' | '\n' | '\r' | ' ' ;


_letter : 'A'-'Z' | 'a'-'z' | '_' | '0'-'9' ;
_digit : '0'-'9' ;
_alpha : _letter | _digit ;

class : 'c' 'l' 'a' 's' 's' ;
def : 'd' 'e' 'f' ;
let: 'l' 'e' 't' ;
extends : 'e' 'x' 't' 'e' 'n' 'd' 's';
if : 'i' 'f' ;
elif : 'e' 'l' 'i' 'f' ;
else : 'e' 'l' 's' 'e' ;
while : 'w' 'h' 'i' 'l' 'e' ;
return : 'r' 'e' 't' 'u' 'r' 'n' ;
typecase : 't' 'y' 'p' 'e' 'c' 'a' 's' 'e' ;
true : 't' 'r' 'u' 'e' ;
false : 'f' 'a' 'l' 's' 'e' ;

/* predefined identifiers */
_not_escape : 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l'
					| 'm' | 'o' | 'p' | 'q' | 's' | 'u' | 'v' | 'w' 
					| 'x' | 'y' | 'z' ;
string_escape_error : '"'{(_alpha | ' ')}  '\\' _not_escape {(_alpha | ' ')}  '"' ;
string_literal : '"' _alpha {(_alpha | ' ')} '"' ;
int : '1'-'9' {_digit} ;
ident : 'S' 't' 'r' 'i' 'n' 'g' | 'I' 'n' 't' | 'O' 'b' 'j' | 'B' 'o' 'o' 'l' 'e' 'a' 'n'
		| 'a' 'n' 'd' | 'o' 'r' | 'n' 'o' 't' 
		| 'N' 'o' 't' 'h' 'i' 'n' 'g' | 'n' 'o' 'n' 'e' | _letter {_letter} ;

// --- [ Comments (suppressed) ] -----------------------------------------------
!comment      : _lineComment | _blockComment | _tripleQuoteComment ;
_lineComment  : '/' '/' { . } '\n' ;
_blockComment : '/' '*' { . | '*' } '*' '/' ;
_tripleQuoteComment : '"' '"' '"' { . } '"' '"' '"' ;

/* punctuation */
plus : '+' ;
minus : '-' ;
mul : '*' ;
div : '/' ;

eq : '=' '=' ;
atmost : '<' '=' ;
lt : '<' ;
atleast : '>' '=' ;
gt : '>' ;

lbrace : '{' ;
rbrace : '}' ;
assign : '=' ;
lparen : '(' ;
rparen : ')' ;
comma : ',' ;
semicolon : ';' ;
period : '.' ;
colon : ':' ;

unknown : . ; // maybe remove this